# init # {{{1
[ -n "$SHRC_LANGUAGE_LOADED" -a -n "$MSYS$CYGWIN" ] && return
# [ $SHLVL -gt 1 ] && return 0
[ -f $HOME/.shrc.functions ] && source $HOME/.shrc.functions
[ -f $HOME/.shrc.refe ] && source $HOME/.shrc.refe
if [ -n "$ZSH_NAME" ]; then
  SHELL_NAME=zsh
# elif [ -n $BASH ]; then
else
  SHELL_NAME=bash
fi

shrc_section_title "OS settings" # {{{1

PATH="$HOME/.bin:$HOME/bin:$HOME/.local/bin:$PATH"

case $OSTYPE in
  cygwin*)
    export CYGWIN='cygwin'
    soft_source $HOME/.shrc.cygwin
    type /usr/bin/perl >/dev/null 2>&1 && PATH="$(echo $PATH | /usr/bin/perl -ne 'print join ":",grep {$_ !~ /(Intel|WindowsPowerShell|\/Wbem|Skype)/} split(":", $_);')"
    PATH=$HOME/bin/windows:$PATH
    ;;
  msys)
    soft_source $HOME/.shrc.cygwin
    PATH="$(echo "$HOME/bin/windows:$PATH" | /usr/bin/sed 's/[()]/\\\0/g' | /usr/bin/sed 's/\\\\\([()]\)/\\\1/g')"
    # PATH="$(echo "$HOME/bin/windows:$PATH" | /usr/bin/sed 's/)/\\)/g' | /usr/bin/sed 's/\\\\)/\\)/g')"
    type /usr/bin/perl >/dev/null 2>&1 && PATH="$(echo $PATH | /usr/bin/perl -ne 'print join ":",grep {$_ !~ /(Intel|WindowsPowerShell|\/Wbem|Skype)/} split(":", $_);')"
    # remove_path /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin
    # PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
    ;;
  darwin*)
    soft_source $HOME/.shrc.osx
    if [ -z "$HOMEBREW_PREFIX" ]; then
      HOMEBREW_PREFIX=/usr/local/
    fi
    if [ "$LOGIN_FROM" != "Finder" ] ; then
      remove_path /usr/local/bin /usr/bin /bin /usr/local/sbin /usr/sbin /sbin
      PATH=$PATH:/usr/local/bin:/usr/bin:/bin:/usr/local/sbin:/usr/sbin:/sbin
      export PYTHONPATH=/usr/local/lib/python:$PYTHONPATH
      PATH=$HOME/bin/macosx:$PATH:/Applications/android-sdk-mac_x86/tools:/Applications/android-sdk-mac_x86/platform-tools
      [ "$LANG" = "ja_JP" ] && export LANG=ja_JP.UTF-8
    fi
    ;;
  freebsd*)
    PATH=$HOME/bin/bsd:$PATH
    soft_source $HOME/.shrc.bsd
    ;;
  linux*)
    PATH=$HOME/bin/linux:$PATH
    if [ -e "$HOME/.linuxbrew" ]; then
      PATH="$HOME/.linuxbrew/bin:$PATH"
      MANPATH="$HOME/.linuxbrew/share/man:$MANPATH"
      export INFOPATH="$HOME/.linuxbrew/share/info:$INFOPATH"
    fi
    if [[ `uname -r` =~ Microsoft ]]; then
      soft_source $HOME/.shrc.winlinux
    else
      soft_source $HOME/.shrc.linux
    fi
    ;;
  solaris*)
    PATH=$HOME/bin/solaris:$PATH
    soft_source $HOME/.shrc.solaris
    ;;
  *)
    ;;
esac

shrc_section_title "languages" # {{{1

shrc_section_title "java" # {{{2
if ! is_mac ; then
  _JAVA_OPTIONS="$_JAVA_OPTIONS -Dawt.useSystemAAFontSettings=lcd"

  if [ "$LANG" = 'ja_JP.UTF-8' ] ; then
    _JAVA_OPTIONS="$_JAVA_OPTIONS -Dfile.encoding=UTF-8"
  fi
  export _JAVA_OPTIONS

  [ -e /etc/alternatives/java ] && export JAVA_HOME=$(dirname $(dirname $(readlink -f /etc/alternatives/java)))

  if [ ! -e "$JAVA_HOME" ]; then
    if [ -d /usr/lib/jvm/java-6-sun ];then
      JAVA_HOME=/usr/lib/jvm/java-6-sun
      export JAVA_HOME
      if [ -d $JAVA_HOME/jre ];then
        JRE_HOME=$JAVA_HOME/jre
        export JRE_HOME
      fi
    fi
  fi
# else
  # _JAVA_OPTIONS="$_JAVA_OPTIONS -Dawt.useSystemAAFontSettings=on"
  # _JAVA_OPTIONS="$_JAVA_OPTIONS -Dfile.encoding=UTF-8"
  # export _JAVA_OPTIONS
fi
# python {{{2
[ -e "$HOME/.rye/env" ] && . "$HOME/.rye/env"
export PYTHONSTARTUP=~/.pyrc
# node {{{2
PATH="node_modules/.bin:$PATH"


if ! is_win ; then

  # googkit {{{2
  if [ -e /usr/local/googkit ]; then
    export GOOGKIT_HOME=/usr/local/googkit
    export PATH="$PATH:$GOOGKIT_HOME/bin"
  fi

  # direnv {{{2
  if [ -e ~/.direnv/direnv ]; then
    PATH="$HOME/.direnv:$PATH"
    eval "$(direnv hook $SHELL_NAME)"
  fi

  # haskell {{{2
  PATH="${HOME}/.cabal/bin:$PATH"

fi

export GOPATH=$HOME/.gopath
PATH="$GOPATH/bin:$PATH"
[ -e $GOPATH/src/bitbucket.org/ymotongpoo/goenv/shellscripts/goenvwrapper.sh ] \
  && source $GOPATH/src/bitbucket.org/ymotongpoo/goenv/shellscripts/goenvwrapper.sh

shrc_section_title "etc" # {{{2
# c/c++ library path
#export PATH=~/bin:$QTDIR/bin:$KDEDIR/bin:/usr/local/bin:/usr/local/X11R7/bin:/usr/bin:/bin:./:/usr/local/sbin:/usr/sbin:/sbin:$ROOTSYS/bin:$TETEX_BIN_PATH:/usr/local/jre/bin:/usr/local/RealPlayer
#export LD_LIBRARY_PATH=/usr/local/X11R7/lib:$QTDIR/lib:$KDEDIR/lib:/usr/local/lib:/usr/lib:/lib:$ROOTSYS/lib:/usr/local/firefox

# for KDE/QT
#export KDEDIR=/usr/local/kde
#export QTDIR=/usr/local/qt

# for teTeX
#export TETEX_PATH=/usr/local/teTeX
#export TEXMF=$TETEX_PATH/share/texmf
#export TETEX_BIN_PATH=$TETEX_PATH/bin/i686-pc-linux-gnu

shrc_section_title "Mozilla Setting" # {{{2
export MOZ_NO_REMOTE=true

export PATH
export MANPATH

# mise {{{2
shrc_section_title "mise" # {{{2
if is_exec mise; then
  eval "$(mise activate $SHELL_NAME)"
elif [ -e ~/.local/bin/mise ]; then
  eval "$(~/.local/bin/mise activate $SHELL_NAME)"
fi

alias mise=mise-exec
# if [ -z "$ANDROID_HOME" ]; then
#   SDK_VER=$(mise list android-sdk 2>/dev/null | awk '{print $2}')
#   export ANDROID_HOME=~/.local/share/mise/installs/android-sdk/$SDK_VER/cmdline-tools/$SDK_VER/
# fi

shrc_section_title "finalize" # {{{1
env_unique PATH
env_unique MANPATH
export SHRC_LANGUAGE_LOADED=1
unset SHELL_NAME

# __END__ {{{1
# vim: fdm=marker sw=2 ts=2 ft=zsh et:
