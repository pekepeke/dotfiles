# vim: fdm=marker ft=tmux:
# basic settings {{{1
# set-option -g default-shell "$TMUX_DEFAULT_COMMAND"
set-option -g default-command "$TMUX_DEFAULT_COMMAND"
# set-option -g default-command "reattach-to-user-namespace -l"
# set-option -g default-command "reattach-to-user-namespace -l zsh"
set -g history-limit 10000
set -g status-interval 5
set -g set-titles on
# set -g set-titles-string "@#(コマンド行)     コマンド出力の最初の行
#[属性]           色/属性の変更(例:#[fg=cyan,bright])
#H                ホスト名
#I                ウィンドウ番号
#P                ペイン番号
#S                セッション名
#T                ウィンドウタイトル
#W                ウィンドウ名
##                「#」の文字#(hostname | sed/\\\\\\..*//')"
set -g set-titles-string "#T \"#W\"(#I/#P)@#H"
set -s escape-time 10
# remove RBENV_VERSION(for tmuxinator)
set-environment -gu RBENV_VERSION

# window {{{1
set-window-option -g automatic-rename off
set-window-option -g alternate-screen off

# activity {{{1
set-window-option -g monitor-activity on
set -g visual-activity off

# mouse {{{1
# -> v[ver].conf

# key {{{1
setw -g mode-keys vi
set -g prefix C-z
unbind-key C-b
bind-key C-z send-prefix

# from screen like {{{2
# Set the prefix to ^A.
#unbind C-b
#set -g prefix ^A
#bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# run-shell "bash ~/.tmux.d/source.sh"
run-shell 'tmux setenv -g TMUX_VERSION $(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$TMUX_VERSION <= 1.8" | bc)" = 1 ]' \
  'source-file ~/.tmux.d/v1.8.conf'
if-shell -b '[ "$(echo "$TMUX_VERSION == 1.9" | bc)" = 1 ]' \
  'source-file ~/.tmux.d/v1.9.conf'
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.1" | bc)" = 1 ]' \
  'source-file ~/.tmux.d/v2.1.conf'
if-shell -b '[ "$(echo "$TMUX_VERSION < 2.4" | bc)" = 1 ]' \
  'source-file ~/.tmux.d/v2.4-before.conf'
if-shell -b '[ "$(echo "$TMUX_VERSION >= 2.4" | bc)" = 1 ]' \
  'source-file ~/.tmux.d/v2.4.conf'

# if-shell "$HOME/.tmux.d/ver.sh \\<= 1.8" \
#   'source-file ~/.tmux.d/v1.8.conf'
# if-shell "$HOME/.tmux.d/ver.sh =~ 1.9" \
#   'source-file ~/.tmux.d/v1.9.conf'
# if-shell "$HOME/.tmux.d/ver.sh \\>= 2.1" \
#   'source-file ~/.tmux.d/v2.1.conf'
# if-shell "$HOME/.tmux.d/ver.sh \\< 2.4" \
#   'source-file ~/.tmux.d/v2.4-before.conf'
# if-shell "$HOME/.tmux.d/ver.sh \\>= 2.4" \
#   'source-file ~/.tmux.d/v2.4.conf'

# detach ^D d
unbind ^D
bind ^D detach

# displays *
unbind *
bind * list-clients

bind s split-window -v
bind v split-window -h

# next ^@ ^N sp n
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^?
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# windows ^W w
unbind ^W
bind ^W list-windows
unbind w
bind w list-windows

# kill K k
# unbind K
# bind K confirm-before "kill-window"
# unbind k
# bind k confirm-before "kill-window"

# redisplay ^L l
unbind ^L
bind ^L refresh-client

# :kB: focus up
unbind Tab
bind Tab select-pane -t:.+
unbind BTab
bind BTab select-pane -t:.-

# " windowlist -b
unbind '"'
bind '"' choose-window
# }}}

# etc-keybinds {{{2
bind Space choose-window

bind -r ^"[" copy-mode
bind -r ^"]" paste-buffer
# bind y copy-mode
bind y run-shell "$TMUX_PREFIX_COMMAND tmux-pbcopy"
bind ^y choose-buffer
# bind p paste-buffer
bind p run-shell "$TMUX_PREFIX_COMMAND tmux-pbpaste"

bind b break-pane
bind B join-pane -t:-.bottom-right
bind k kill-pane
bind K confirm-before "kill-window"

## can't set...
# bind -t vi-copy y run-shell "$TMUX_PREFIX_COMMAND tmux-pbcopy"

bind Q confirm-before "kill-window"
bind q confirm-before "kill-pane"

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

bind -r H swap-pane -D
bind -r J swap-pane -D
bind -r K swap-pane -U
bind -r L swap-pane -U

bind -r C-h resize-pane -L 6
bind -r BSpace resize-pane -L 6
bind -r C-j resize-pane -D 6
bind -r C-k resize-pane -U 6
bind -r C-l resize-pane -R 6

bind "_" select-layout main-vertical
bind = select-layout even-horizontal

bind Z pipe-pane 'cat >>$HOME/tmux-#W.log' \; display-message 'Started logging to $HOME/tmux-#W.log'
bind z pipe-pane \; display-message 'Ended logging to $HOME/tmux-#W.log'

unbind w
unbind ^W
bind w choose-window
bind ^W choose-window
if-shell "type peco >/dev/null 2>&1" \
	'source-file ~/.tmux.d/peco.conf'
# bind w split-window 'zaw-launcher tmux-window'
bind C-c run-shell 'tmux neww "cd $(tmux display -p "\$TMUXPWD_#I"); exec $SHELL"'

bind '^' run-shell 'tmux set-window-option synchronize-panes on'
bind '~' run-shell 'tmux set-window-option synchronize-panes off'

bind '$' run-shell 'tmux rename-window $(tmux show-env | grep $(tmux display -p "TMUXPWD_#I") | head -1 | cut -d"=" -f2)'
# reload config file
bind r source-file ~/.tmux.conf \; display-message "source-file : ~/.tmux.conf"

# colors {{{1
set -g status on
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
set -g default-terminal "screen-256color"
if-shell 'test $TERM = alacritty' "set-option -sa terminal-overrides ',alacritty:RGB'"
# set -g default-terminal "xterm-256color"

# set -g status-left '#[fg=black,bg=colour82,bold] #20(hostname -s)#[default][#S]#[fg=colour202,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold]▸#(whoami) '
# set -g status-left '#[fg=black,bg=colour82,bold] #20T#[default][#S]#[fg=colour202,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold]▸#(whoami) '
set -g status-left '#[fg=black,bg=colour82,bold] #S #[default]#[fg=colour202,bg=colour238,nobold]#[fg=colour245,bg=colour238,bold]▸#(whoami)'
set -g window-status-format "#[fg=white,bg=colour234]▹#I:#W "
# set -g window-status-current-format "#[fg=colour234,bg=colour39]*#[fg=colour234,bg=colour39,noreverse,bold]#I:#W#[fg=colour39,bg=colour234,bold] "
set -g window-status-current-format "#[fg=colour234,bg=colour39]▸#[fg=colour234,bg=colour39,noreverse,bold]#I:#W "

# set -g status-right '#[fg=colour241] #I:#P #[fg=colour31,bg=colour234,nobold]#[fg=colour12,bg=colour31] Mem #(used-mem)%% LAve.[#(loadaverage)] #[fg=colour16,bg=colour190,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g status-right '#[fg=black,bg=colour82,bold]#20T#[default]#[fg=colour241] #I:#P #[fg=colour31,bg=colour234,nobold]#[fg=colour12,bg=colour31] Mem:#(used-mem)% LA.%[#(loadaverage)] #[fg=colour16,bg=colour190,bold] %Y/%m/%d(%a)%H:%M#[default]'

if-shell "test -e ~/.tmux.local.conf" "source-file ~/.tmux.local.conf"

# __END__ {{{1
