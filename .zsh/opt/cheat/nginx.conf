# vim:ft=nginx expandtab
user www-data;
worker_processes 4;
pid /run/nginx.pid;

events {
    ## ulimits
    # # ulimit -Hn
    # # ulimit -Sn
    # # vi /etc/sysctl.conf
    # fs.file-max = 50000
    # # vi /etc/security/limits.conf
    # nginx       soft    nofile   10000
    # nginx       hard    nofile  30000
    # # sysctl -p
    worker_rlimit_nofile 1024;
    worker_connections 1024;
    # multi_accept on;
    use epoll;
}

http {
    log_format  ltsv  'time:$time_local\t'
                      'msec:$msec\t'
                      'host:$remote_addr\t'
                      'forwardedfor:$http_x_forwarded_for\t'
                      'req:$request\t'
                      'method:$request_method\t'
                      'uri:$request_uri\t'
                      'status:$status\t'
                      'size:$body_bytes_sent\t'
                      'referer:$http_referer\t'
                      'ua:$http_user_agent\t'
                      'reqtime:$request_time\t'
                      'upsttime:$upstream_response_time\t'
                      'cache:$upstream_http_x_cache\t'
                      'runtime:$upstream_http_x_runtime\t'
                      'vhost:$host';

    access_log /var/log/nginx/access.log ltsv;
    error_log /var/log/nginx/error.log;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;


    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay        on;
    keepalive_timeout  65;
    types_hash_max_size 2048;

    connection_pool_size 256;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 2k;
    request_pool_size 4k;
    if_modified_since before;
    ignore_invalid_headers on;
    server_tokens off;

    # gzip
    gzip on;
    gzip_static on;
    gzip_disable "msie6";
    gzip_min_length 1000;
    gzip_vary on;
    gzip_proxied expired no-cache no-store private auth;
    gzip_comp_level 9;
    gzip_http_version 1.1;
    gzip_types text/plain text/css image/png image/gif image/jpeg application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    output_buffers 1 32k;
    postpone_output 1460;

# upstream unicorn_server {
#     server unix:/tmp/unicorn.sock
#     fail_timeout=0;
# }

server {
    listen   80 default;

    listen      443 ssl;
    listen      443 quic reuseport;
    http2       on;
    http3       on;
    add_header  Alt-Svc 'h3=":443"; ma=86400';
    ssl_protocols TLSv1.2 TLSv1.3;

    server_name  localhost;
    client_max_body_size 4G;
    # client_max_body_size 1k;
    # client_header_buffer_size 1k;
    # large_client_header_buffers 4 8k;

    access_log  /var/log/nginx/localhost.access.log ltsv;

    root /var/www/myapp/public;

    # location ~ ^/assets/ {
    #     root /var/www/myapp/shared/public;
    #     access_log off;
    # }

    location ~ .*\.(html?) {
        expires 10d;
    }

    location ~ .*\.(jpe?g|gif|png|css|js|ico|woff) {
        access_log off;
        expires 10d;
    }

    location / {
        index  index.html index.htm;

        # add_header Access-Control-Allow-Origin *;
        # add_header Access-Control-Allow-Methods "GET POST OPTIONS";

        add_header P3P "CP=\"NOI ADMa\"";
        # add_header P3P 'policyref="/w3c/p3p.xml", CP="IDC DSP COR ADM DEVi TAIi PSA PSD IVAi IVDi CONi HIS OUR IND CNT", CP="CAO PSA OUR"';
        # add_header Strict-Transport-Security "max-age=315360000; includeSubDomains";

        add_header X-XSS-Protection "1; mode=block";
        # add_header X-Frame-Options SAMEORIGIN;
        add_header X-Frame-Options DENY;
        add_header X-Content-Type-Options nosniff;

        real_ip_header X-Forwarded-For;

        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://ssl.google-analytics.com; img-src 'self' https://ssl.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com 'self' https://themes.googleusercontent.com; frame-src 'none' object-src 'none'";

        # set_real_ip_from 10.10.0.0/16;    # 信頼できるアドレス空間を指定。
        # real_ip_recursive on;    # 必要であれば。

         if (!-f $request_filename) {
            # proxy_pass http://unicorn_server;
            proxy_pass http://127.0.0.1:3000

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_redirect off;

            # for aws
            # proxy_set_header X-Real-IP $remote_addr;
            # proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
            # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            # proxy_set_header Host $http_host;
            # proxy_redirect off;
            break;
        }

    }

    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    location ~ /\.ht {
        deny  all;
    }

    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        deny all;
    }
}


}

