# vim:fdm=marker sw=2 ts=2 noexpandtab:
snippet #!
	#!/bin/bash

snippet if
	if [[ ${1:condition} ]]; then
		${2:#statements}
	fi
snippet elif
	elif [[ ${1:condition} ]]; then
		${2:#statements}
snippet for
	for (( ${2:i} = 0; $2 < ${1:count}; $2++ )); do
		${3:#statements}
	done
snippet wh
	while [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet whf whilef
	while read _LINE ; do
		echo "$_LINE"
	done < ${1:file}
snippet whv whilev
	while read _LINE ; do
		echo "$_LINE"
	done <<< ${1:var}
snippet until
	until [[ ${1:condition} ]]; do
		${2:#statements}
	done
snippet case
	case ${1:word} in
		${2:pattern})
			${3};;
	esac
snippet casea
	case `uname -m` in
		alpha) ;;
		arc) ;;
		arm) ;;
		aarch64_be) ;; # (arm64)
		aarch64) ;; # (arm64)
		armv8b) ;; # (arm64 compat)
		armv8l) ;; # (arm64 compat)
		blackfin) ;;
		c6x) ;;
		cris) ;;
		frv) ;;
		h8300) ;;
		hexagon) ;;
		ia64) ;;
		m32r) ;;
		m68k) ;;
		metag) ;;
		microblaze) ;;
		mips) ;; # (native or compat)
		mips64) ;; # (mips)
		mn10300) ;;
		nios2) ;;
		openrisc) ;;
		parisc) ;; # (native or compat)
		parisc64) ;; # (parisc)
		ppc) ;; # (powerpc native or compat)
		ppc64) ;; # (powerpc)
		ppcle) ;; # (powerpc native or compat)
		ppc64le) ;; # (powerpc)
		s390) ;; # (s390x compat)
		s390x) ;;
		score) ;;
		sh) ;;
		sh64) ;; # (sh)
		sparc) ;; # (native or compat)
		sparc64) ;; # (sparc)
		tile) ;;
		unicore32) ;;
		i386) ;; # (x86)
		i686) ;; # (x86 compat)
		x86_64) ;; # (x64)
		xtensa) ;;
	esac
snippet func
	function ${1:func} {
		$2
	}
snippet IFS
	(
		IFS=$'\n';
		${1}
	)
snippet OS
	case $OSTYPE in
		cygwin*)
			cygstart ${1:file} ${2};;
		darwin*)
			open $1 ;;
		bsd*)
			xdg-open $1 ;;
		linux*)
			xdg-open $1 ;;
		solaris*)
			xdg-open $1 ;;
		*)
			;;
	esac

snippet caseostype
	case "$OSTYPE" in
		solaris*) echo "SOLARIS" ;;
		darwin*)  echo "OSX" ;;
		linux*)   echo "LINUX" ;;
		bsd*)     echo "BSD" ;;
		*)        echo "unknown: $OSTYPE" ;;
	esac

snippet script_dir
	script_dir="$(cd "$(dirname "${BASH_SOURCE:-\$0}")"; pwd)"
snippet script_dir2
	script_dir="$(cd -- "$(dirname -- "${BASH_SOURCE:-\$0}")"; pwd)"

# http://qiita.com/b4b4r07/items/77c589f21a99db8bb682
snippet pipe_in
	if [ -p /dev/stdin ]; then
		$0
	fi

snippet pipe_out
	if [ -p /dev/stdout ];then
		$0
	fi

# http://qiita.com/takc923/items/0bc32e2bdc7f82b2462f
snippet zip_dirs
	find . -type d -depth 1 | while IFS= read -r dir; do zip -r \$dir.zip \$dir; done

# http://qiita.com/ngyuki/items/4286e16ceee14f6aad2f
snippet ip_addr
	/sbin/ip -o route get 255.255.255.255 | grep -Eo 'src\s+\S+' | awk '{print \$2}'
snippet echoerr
  echo ${1} 1>&2
  ${2}

snippet echoerrfn
	echoerr() {
		echo "$@" >&2
	}
	$0
snippet echocolorfn
	echored() {
		echo -e "\e[00;31m$*\e[00m"
	}
	echogreen() {
		echo -e "\e[00;32m$*\e[00m"
	}
	echoyellow() {
		echo -e "\e[00;33m$*\e[00m"
	}
snippet pipe_normalize_filepath
	| sed -e 's/ /\\ /g' | tr "[:cntrl:]" " "
snippet pipe_converthome
	| perl -pe 's/(\Q$ENV{HOME}\E(.*$))/~$2/'
snippet basename
	basename=${path##*/}
snippet filename
	filename=${basename%.*}
snippet extension
	extension=${basename##*.}
snippet logger
	exec 1> >(logger -s -t "$(basename \$0)") 2>&1
snippet logger_info
	exec 1> >(logger -s -t "$(basename \$0)" -p local0.info) 2>&1
snippet logger_boot
	exec > >(tee /var/log/`expand('%:p:t:r')`.log|logger -t `expand('%:p:t:r')` -s 2>/dev/console) 2>&1

